import { TimeClasses } from "chess-web-api";
import type { NextPage } from "next";
import Head from "next/head";
import Image from "next/image";
import { useState } from "react";
import { isValidTimeClass } from "../analyzer/analyzer";
import { UsernameContext } from "../components/CurrentUsername";
import { HoverBoard, WithHoverBoard } from "../components/HoverBoard";
import { Chart, Circle, Svg } from "../components/root";
import { VisualizeRoot } from "../components/VisualizeRoot";
import styles from "../styles/Home.module.css";

const Home: NextPage = () => {
  const [time_class, setTimeClass] = useState<TimeClasses>("rapid");
  const [username, setUsername] = useState<string | null>(null);
  const [pendingUsername, setPendingUsername] = useState("");
  return (
    <UsernameContext.Provider value={username || ""}>
      <WithHoverBoard>
        <div className={styles.container}>
          <Head>
            <title>Create Next App</title>
            <meta name="description" content="Generated by create next app" />
            <link rel="icon" href="/favicon.ico" />
          </Head>

          <main className={styles.main}>
            <h1 className={styles.title}>Welcome to Chess Analyzer</h1>

            <p className={styles.description}>
              Who are you on Chess.com?{" "}
              <input
                className={styles.code}
                value={pendingUsername}
                onChange={(e) => {
                  setPendingUsername(e.currentTarget.value);
                }}
                onBlur={() => {
                  console.log("Blur!");
                  setUsername(pendingUsername);
                }}
                readOnly={!!username}
                placeholder={"username"}
              />
            </p>
            <p className={styles.description}>
              What time control do you want to focus on?{" "}
              <select
                className={styles.code}
                value={time_class}
                onChange={(e) => {
                  if (isValidTimeClass(e.currentTarget.value)) {
                    setTimeClass(e.currentTarget.value);
                  }
                }}
              >
                <option value="bullet">Bullet</option>
                <option value="blitz">Blitz</option>
                <option value="rapid">Rapid</option>
              </select>
            </p>

            <div
              style={{
                display: "flex",
              }}
            >
              {username && (
                <VisualizeRoot username={username} time_class={time_class} />
              )}
              <div style={{ margin: 10 }} className="sticky">
                {" "}
                <HoverBoard />
              </div>
            </div>
          </main>

          <footer className={styles.footer}>
            <a
              href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
              target="_blank"
              rel="noopener noreferrer"
            >
              Powered by <span className={styles.logo}>Stockfish</span>
            </a>
          </footer>
        </div>
      </WithHoverBoard>
    </UsernameContext.Provider>
  );
};

export default Home;
